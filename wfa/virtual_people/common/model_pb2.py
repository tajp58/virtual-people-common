# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: wfa/virtual_people/common/model.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import field_mask_pb2 as google_dot_protobuf_dot_field__mask__pb2
from wfa.virtual_people.common import demographic_pb2 as wfa_dot_virtual__people_dot_common_dot_demographic__pb2
from wfa.virtual_people.common import event_pb2 as wfa_dot_virtual__people_dot_common_dot_event__pb2
from wfa.virtual_people.common import field_filter_pb2 as wfa_dot_virtual__people_dot_common_dot_field__filter__pb2
from wfa.virtual_people.common import label_pb2 as wfa_dot_virtual__people_dot_common_dot_label__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%wfa/virtual_people/common/model.proto\x12\x12wfa_virtual_people\x1a google/protobuf/field_mask.proto\x1a+wfa/virtual_people/common/demographic.proto\x1a%wfa/virtual_people/common/event.proto\x1a,wfa/virtual_people/common/field_filter.proto\x1a%wfa/virtual_people/common/label.proto\"\xb2\x03\n\x0c\x43ompiledNode\x12\x11\n\x04name\x18\x01 \x01(\tH\x01\x88\x01\x01\x12\x12\n\x05index\x18\x02 \x01(\rH\x02\x88\x01\x01\x12\x35\n\x0b\x62ranch_node\x18\x03 \x01(\x0b\x32\x1e.wfa_virtual_people.BranchNodeH\x00\x12\x31\n\tstop_node\x18\x04 \x01(\x0b\x32\x1c.wfa_virtual_people.StopNodeH\x00\x12=\n\x0fpopulation_node\x18\x05 \x01(\x0b\x32\".wfa_virtual_people.PopulationNodeH\x00\x12\x43\n\ndebug_info\x18\x64 \x01(\x0b\x32*.wfa_virtual_people.CompiledNode.DebugInfoH\x03\x88\x01\x01\x1a\x63\n\tDebugInfo\x12/\n\"directly_from_model_builder_config\x18\x01 \x01(\x08H\x00\x88\x01\x01\x42%\n#_directly_from_model_builder_configB\x06\n\x04typeB\x07\n\x05_nameB\x08\n\x06_indexB\r\n\x0b_debug_info\"\xfe\x01\n\x0ePopulationNode\x12\x43\n\x05pools\x18\x01 \x03(\x0b\x32\x34.wfa_virtual_people.PopulationNode.VirtualPersonPool\x12\x18\n\x0brandom_seed\x18\x02 \x01(\tH\x00\x88\x01\x01\x1a}\n\x11VirtualPersonPool\x12\x1e\n\x11population_offset\x18\x01 \x01(\x04H\x00\x88\x01\x01\x12\x1d\n\x10total_population\x18\x02 \x01(\x04H\x01\x88\x01\x01\x42\x14\n\x12_population_offsetB\x13\n\x11_total_populationB\x0e\n\x0c_random_seed\"\xbc\x07\n\nBranchNode\x12\x37\n\x08\x62ranches\x18\x01 \x03(\x0b\x32%.wfa_virtual_people.BranchNode.Branch\x12\x18\n\x0brandom_seed\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x44\n\x07updates\x18\x03 \x01(\x0b\x32\x31.wfa_virtual_people.BranchNode.AttributesUpdatersH\x00\x12\x38\n\x0cmultiplicity\x18\x04 \x01(\x0b\x32 .wfa_virtual_people.MultiplicityH\x00\x1a\xb8\x01\n\x06\x42ranch\x12\x14\n\nnode_index\x18\x01 \x01(\rH\x00\x12\x30\n\x04node\x18\x02 \x01(\x0b\x32 .wfa_virtual_people.CompiledNodeH\x00\x12\x10\n\x06\x63hance\x18\x03 \x01(\x01H\x01\x12\x39\n\tcondition\x18\x04 \x01(\x0b\x32$.wfa_virtual_people.FieldFilterProtoH\x01\x42\x0c\n\nchild_nodeB\x0b\n\tselect_by\x1a\xac\x03\n\x11\x41ttributesUpdater\x12\x39\n\rupdate_matrix\x18\x01 \x01(\x0b\x32 .wfa_virtual_people.UpdateMatrixH\x00\x12\x46\n\x14sparse_update_matrix\x18\x02 \x01(\x0b\x32&.wfa_virtual_people.SparseUpdateMatrixH\x00\x12\x41\n\x11\x63onditional_merge\x18\x03 \x01(\x0b\x32$.wfa_virtual_people.ConditionalMergeH\x00\x12\x35\n\x0bupdate_tree\x18\x04 \x01(\x0b\x32\x1e.wfa_virtual_people.UpdateTreeH\x00\x12K\n\x16\x63onditional_assignment\x18\x05 \x01(\x0b\x32).wfa_virtual_people.ConditionalAssignmentH\x00\x12\x43\n\x12geometric_shredder\x18\x06 \x01(\x0b\x32%.wfa_virtual_people.GeometricShredderH\x00\x42\x08\n\x06update\x1aW\n\x12\x41ttributesUpdaters\x12\x41\n\x07updates\x18\x01 \x03(\x0b\x32\x30.wfa_virtual_people.BranchNode.AttributesUpdaterB\x08\n\x06\x61\x63tionB\x0e\n\x0c_random_seed\"\n\n\x08StopNode\"\xc4\x02\n\x0cUpdateMatrix\x12\x31\n\x07\x63olumns\x18\x01 \x03(\x0b\x32 .wfa_virtual_people.LabelerEvent\x12.\n\x04rows\x18\x02 \x03(\x0b\x32 .wfa_virtual_people.LabelerEvent\x12\x15\n\rprobabilities\x18\x03 \x03(\x02\x12\x38\n\x0fhash_field_mask\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.FieldMaskH\x00\x88\x01\x01\x12%\n\x18pass_through_non_matches\x18\x05 \x01(\x08H\x01\x88\x01\x01\x12\x18\n\x0brandom_seed\x18\x06 \x01(\tH\x02\x88\x01\x01\x42\x12\n\x10_hash_field_maskB\x1b\n\x19_pass_through_non_matchesB\x0e\n\x0c_random_seed\"\xb0\x03\n\x12SparseUpdateMatrix\x12>\n\x07\x63olumns\x18\x01 \x03(\x0b\x32-.wfa_virtual_people.SparseUpdateMatrix.Column\x12\x38\n\x0fhash_field_mask\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.FieldMaskH\x00\x88\x01\x01\x12%\n\x18pass_through_non_matches\x18\x03 \x01(\x08H\x01\x88\x01\x01\x12\x18\n\x0brandom_seed\x18\x04 \x01(\tH\x02\x88\x01\x01\x1a\x9d\x01\n\x06\x43olumn\x12;\n\x0c\x63olumn_attrs\x18\x01 \x01(\x0b\x32 .wfa_virtual_people.LabelerEventH\x00\x88\x01\x01\x12.\n\x04rows\x18\x02 \x03(\x0b\x32 .wfa_virtual_people.LabelerEvent\x12\x15\n\rprobabilities\x18\x03 \x03(\x02\x42\x0f\n\r_column_attrsB\x12\n\x10_hash_field_maskB\x1b\n\x19_pass_through_non_matchesB\x0e\n\x0c_random_seed\"\xc7\x02\n\x10\x43onditionalMerge\x12H\n\x05nodes\x18\x01 \x03(\x0b\x32\x39.wfa_virtual_people.ConditionalMerge.ConditionalMergeNode\x12%\n\x18pass_through_non_matches\x18\x02 \x01(\x08H\x00\x88\x01\x01\x1a\xa4\x01\n\x14\x43onditionalMergeNode\x12<\n\tcondition\x18\x01 \x01(\x0b\x32$.wfa_virtual_people.FieldFilterProtoH\x00\x88\x01\x01\x12\x35\n\x06update\x18\x02 \x01(\x0b\x32 .wfa_virtual_people.LabelerEventH\x01\x88\x01\x01\x42\x0c\n\n_conditionB\t\n\x07_updateB\x1b\n\x19_pass_through_non_matches\"\x94\x02\n\x15\x43onditionalAssignment\x12<\n\tcondition\x18\x01 \x01(\x0b\x32$.wfa_virtual_people.FieldFilterProtoH\x00\x88\x01\x01\x12I\n\x0b\x61ssignments\x18\x02 \x03(\x0b\x32\x34.wfa_virtual_people.ConditionalAssignment.Assignment\x1a\x64\n\nAssignment\x12\x19\n\x0csource_field\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x19\n\x0ctarget_field\x18\x02 \x01(\tH\x01\x88\x01\x01\x42\x0f\n\r_source_fieldB\x0f\n\r_target_fieldB\x0c\n\n_condition\"J\n\nUpdateTree\x12\x33\n\x04root\x18\x01 \x01(\x0b\x32 .wfa_virtual_people.CompiledNodeH\x00\x88\x01\x01\x42\x07\n\x05_root\"\xb7\x01\n\x11GeometricShredder\x12\x10\n\x03psi\x18\x01 \x01(\x02H\x00\x88\x01\x01\x12\x1d\n\x10randomness_field\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x19\n\x0ctarget_field\x18\x03 \x01(\tH\x02\x88\x01\x01\x12\x18\n\x0brandom_seed\x18\x04 \x01(\tH\x03\x88\x01\x01\x42\x06\n\x04_psiB\x13\n\x11_randomness_fieldB\x0f\n\r_target_fieldB\x0e\n\x0c_random_seed\"\x9a\x02\n\x0cMultiplicity\x12\x1f\n\x15\x65xpected_multiplicity\x18\x01 \x01(\x01H\x00\x12%\n\x1b\x65xpected_multiplicity_field\x18\x02 \x01(\tH\x00\x12\x16\n\tmax_value\x18\x03 \x01(\x01H\x01\x88\x01\x01\x12\x17\n\ncap_at_max\x18\x04 \x01(\x08H\x02\x88\x01\x01\x12\x1f\n\x12person_index_field\x18\x05 \x01(\tH\x03\x88\x01\x01\x12\x18\n\x0brandom_seed\x18\x06 \x01(\tH\x04\x88\x01\x01\x42\x12\n\x10multiplicity_refB\x0c\n\n_max_valueB\r\n\x0b_cap_at_maxB\x15\n\x13_person_index_fieldB\x0e\n\x0c_random_seed\"\x97\x07\n\x0cLabelerEvent\x12<\n\rlabeler_input\x18\x01 \x01(\x0b\x32 .wfa_virtual_people.LabelerInputH\x00\x88\x01\x01\x12L\n\x19virtual_person_activities\x18\x02 \x03(\x0b\x32).wfa_virtual_people.VirtualPersonActivity\x12#\n\x16is_user_id_free_person\x18\x03 \x01(\x08H\x01\x88\x01\x01\x12 \n\x13person_country_code\x18\x04 \x01(\tH\x02\x88\x01\x01\x12\x1f\n\x12person_region_code\x18\x05 \x01(\tH\x03\x88\x01\x01\x12\x38\n\x0b\x61\x63ting_demo\x18\x06 \x01(\x0b\x32\x1e.wfa_virtual_people.DemoBucketH\x04\x88\x01\x01\x12!\n\x14\x61\x63ting_demo_id_space\x18\x07 \x01(\tH\x05\x88\x01\x01\x12;\n\x0e\x63orrected_demo\x18\x08 \x01(\x0b\x32\x1e.wfa_virtual_people.DemoBucketH\x06\x88\x01\x01\x12\x1f\n\x12\x61\x63ting_fingerprint\x18\t \x01(\x04H\x07\x88\x01\x01\x12\"\n\x15\x65xpected_multiplicity\x18\n \x01(\x01H\x08\x88\x01\x01\x12&\n\x19multiplicity_person_index\x18\x0b \x01(\x05H\t\x88\x01\x01\x12I\n\x0equantum_labels\x18\x0c \x01(\x0b\x32,.wfa_virtual_people.IndependentQuantumLabelsH\n\x88\x01\x01\x12=\n\x05label\x18\r \x01(\x0b\x32).wfa_virtual_people.PersonLabelAttributesH\x0b\x88\x01\x01\x42\x10\n\x0e_labeler_inputB\x19\n\x17_is_user_id_free_personB\x16\n\x14_person_country_codeB\x15\n\x13_person_region_codeB\x0e\n\x0c_acting_demoB\x17\n\x15_acting_demo_id_spaceB\x11\n\x0f_corrected_demoB\x15\n\x13_acting_fingerprintB\x18\n\x16_expected_multiplicityB\x1c\n\x1a_multiplicity_person_indexB\x11\n\x0f_quantum_labelsB\x08\n\x06_labelB#\n\x1forg.wfanet.virtualpeople.commonP\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'wfa.virtual_people.common.model_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\037org.wfanet.virtualpeople.commonP\001'
  _COMPILEDNODE._serialized_start=265
  _COMPILEDNODE._serialized_end=699
  _COMPILEDNODE_DEBUGINFO._serialized_start=558
  _COMPILEDNODE_DEBUGINFO._serialized_end=657
  _POPULATIONNODE._serialized_start=702
  _POPULATIONNODE._serialized_end=956
  _POPULATIONNODE_VIRTUALPERSONPOOL._serialized_start=815
  _POPULATIONNODE_VIRTUALPERSONPOOL._serialized_end=940
  _BRANCHNODE._serialized_start=959
  _BRANCHNODE._serialized_end=1915
  _BRANCHNODE_BRANCH._serialized_start=1185
  _BRANCHNODE_BRANCH._serialized_end=1369
  _BRANCHNODE_ATTRIBUTESUPDATER._serialized_start=1372
  _BRANCHNODE_ATTRIBUTESUPDATER._serialized_end=1800
  _BRANCHNODE_ATTRIBUTESUPDATERS._serialized_start=1802
  _BRANCHNODE_ATTRIBUTESUPDATERS._serialized_end=1889
  _STOPNODE._serialized_start=1917
  _STOPNODE._serialized_end=1927
  _UPDATEMATRIX._serialized_start=1930
  _UPDATEMATRIX._serialized_end=2254
  _SPARSEUPDATEMATRIX._serialized_start=2257
  _SPARSEUPDATEMATRIX._serialized_end=2689
  _SPARSEUPDATEMATRIX_COLUMN._serialized_start=2467
  _SPARSEUPDATEMATRIX_COLUMN._serialized_end=2624
  _CONDITIONALMERGE._serialized_start=2692
  _CONDITIONALMERGE._serialized_end=3019
  _CONDITIONALMERGE_CONDITIONALMERGENODE._serialized_start=2826
  _CONDITIONALMERGE_CONDITIONALMERGENODE._serialized_end=2990
  _CONDITIONALASSIGNMENT._serialized_start=3022
  _CONDITIONALASSIGNMENT._serialized_end=3298
  _CONDITIONALASSIGNMENT_ASSIGNMENT._serialized_start=3184
  _CONDITIONALASSIGNMENT_ASSIGNMENT._serialized_end=3284
  _UPDATETREE._serialized_start=3300
  _UPDATETREE._serialized_end=3374
  _GEOMETRICSHREDDER._serialized_start=3377
  _GEOMETRICSHREDDER._serialized_end=3560
  _MULTIPLICITY._serialized_start=3563
  _MULTIPLICITY._serialized_end=3845
  _LABELEREVENT._serialized_start=3848
  _LABELEREVENT._serialized_end=4767
# @@protoc_insertion_point(module_scope)
